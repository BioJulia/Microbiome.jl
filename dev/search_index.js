var documenterSearchIndex = {"docs":
[{"location":"#Microbiome.jl-1","page":"Home","title":"Microbiome.jl","text":"","category":"section"},{"location":"#For-analysis-of-microbiome-and-microbial-community-data-1","page":"Home","title":"For analysis of microbiome and microbial community data","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"(Image: Latest Release) (Image: Microbiome) (Image: License) (Image: ) (Image: ) (Image: BioJulia maintainer: kescobo)","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Development builds: (Image: Build Status)","category":"page"},{"location":"#Description-1","page":"Home","title":"Description","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Microbiome.jl is a package for manipulating and analyzing microbiome and microbial community data. Many functions have been added to external packages and are imported here.","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Install Microbiome from the Julia REPL:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> Pkg.add(\"Microbiome\")","category":"page"},{"location":"#","page":"Home","title":"Home","text":"If you are interested in the cutting edge of the development, please check out the master branch to try new features before release.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> Pkg.checkout(\"Microbiome\")","category":"page"},{"location":"abundances/#Working-with-microbial-abundances-1","page":"Microbial Abundances","title":"Working with microbial abundances","text":"","category":"section"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"Tables of abundances are based off ComMatrix types from SpatialEcology.jl, where columns are samples and rows are features (eg species). Sample and feature names are also stored, and there's a convenience function if you want to convert a DataFrame to a ComMatrix, assuming the first column contains feature names:","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"using Microbiome\nusing DataFrames\n\ndf = DataFrame(species=[\"E. coli\", \"B. fragilis\", \"L. casei\"],\n                      sample1=[1, 4, 5],\n                      sample2=[3, 8, 0],\n                      sample3=[0, 3, 4]);\n\nabund = abundancetable(df)","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"Forgive the clutter... ComMatricies name rows as species (which is true in this case, but need not be), and columns are \"sites\" rather than samples. That will be fixed eventually.","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"samplenames(abund)\nfeaturenames(abund)\nsampletotals(abund) # this is column sums\nfeaturetotals(abund) # this is row sums","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"If you want relative abundance, you can do relativeabundance(abund) or relativeabundance!(abund):","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"relativeabundance!(abund)\n\nsampletotals(abund)","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"You can also filter on the n most abundant features accross the dataset. This function automatically generates an n+1 row for other containing the remaining features. Note - these doesn't modify in-place, so you've gotta reassign if you want to update:","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"abund2 = filterabund(abund, 1)\n\nfeaturenames(abund2)","category":"page"},{"location":"abundances/#Plotting-1","page":"Microbial Abundances","title":"Plotting","text":"","category":"section"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"Some convenience plotting types are available using MicrobiomePlots and StatsPlots","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"ENV[\"GKSwstype\"] = \"100\" # hide\nusing StatsPlots\nusing MicrobiomePlots\nusing Distributions\nusing Random # hide\nRandom.seed!(1) # hide\n\n# add some high abundance bugs to be a bit more realistic\nfunction spikein(spikes, y, x)\n    m = rand(LogNormal(), y, x)\n    for s in spikes\n        m[s, :] = rand(LogNormal(3., 0.5), x)'\n    end\n    return m\nend\n\n# 100 species in 10 samples, with every 10th bug a bit more abundant\nbugs = spikein(1:10:100, 100, 10)\n\nabund = abundancetable(bugs,\n    [\"sample_$x\" for x in 1:10],\n    [\"species_$x\" for x in 1:100]);\n\nrelativeabundance!(abund)\nabundanceplot(abund, xticks=(1:10, samplenames(abund)), xrotation=45)\n\nsavefig(\"abundanceplot.png\"); nothing # hide","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"(Image: abundance plot)","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"Perhaps you have some metadata that you'd like to add as well:","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"labels = [\"a\",\"a\",\"b\",\"a\",\"b\",\"b\",\"b\",\"b\",\"a\",\"a\"]\n\nplot(\n    abundanceplot(abund, xticks=(1:10, samplenames(abund)), xrotation=45),\n    plot(annotationbar(labels)),\n    layout=grid(2,1, heights=[0.9,0.1]))\n\nsavefig(\"abundanceplot-annotations.png\"); nothing # hide","category":"page"},{"location":"abundances/#","page":"Microbial Abundances","title":"Microbial Abundances","text":"(Image: abundance plot with annotations)","category":"page"},{"location":"distances/#Working-with-Distances-/-Dissimilarity-1","page":"Distances & Dissimilarity","title":"Working with Distances / Dissimilarity","text":"","category":"section"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"Quite often, it's useful to boil stuff down to distances between samples. AbundanceTables can be used with the pairwise() function from Distances.jl to get a symetric distance matrix.","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"using Distances\nusing Microbiome\n\nabund = abundancetable([1  3  0;\n                        4  8  3;\n                        5  0  4]);\n\ndm = pairwise(BrayCurtis(), abund, dims=2)","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"To plot this, use the MDS or PCA implementations from MultivariateStats [1] and plotting functionality from StatsPlots[2].","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"using MultivariateStats\nusing StatsPlots\n\nmds = fit(MDS, dm, distances=true)\n\nplot(mds)\n\nsavefig(\"mds.png\"); nothing # hide","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"(Image: mds plot)","category":"page"},{"location":"distances/#Optimal-Leaf-Ordering-1","page":"Distances & Dissimilarity","title":"Optimal Leaf Ordering","text":"","category":"section"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"I also wrote a plotting recipe for making treeplots for Hclust objects from the Clustering.jl package, and the recipe for plotting was moved into StatsPlots:","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"using Clustering\n\ndm = [0. .1 .2\n      .1 0. .15\n      .2 .15 0.];\n\nh = hclust(dm, linkage=:single);\n\nplot(h)\nsavefig(\"hclustplot1.png\"); nothing # hide","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"(Image: hclust plot 1)","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"Note that even though this is a valid tree, the leaf a is closer to leaf c, despite the fact that c is more similar to b than to a. This can be fixed with a method derived from the paper:","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"Bar-Joseph et. al. \"Fast optimal leaf ordering for hierarchical clustering.\" Bioinformatics. (2001)[3]","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"h2 = hclust(dm, linkage=:single, branchorder=:optimal);\n\nplot(h2)\n\nsavefig(\"hclustplot2.png\"); nothing # hide","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"(Image: hclust plot 1)","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"[1]: Requires https://github.com/JuliaStats/MultivariateStats.jl/pull/85","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"[2]: Requires https://github.com/JuliaPlots/StatsPlots.jl/pull/152","category":"page"},{"location":"distances/#","page":"Distances & Dissimilarity","title":"Distances & Dissimilarity","text":"[3]: Requires https://github.com/JuliaStats/Clustering.jl/pull/170","category":"page"},{"location":"contributing/#Contributing-1","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/#","page":"Contributing","title":"Contributing","text":"The BioJulia organisation has a set of contribution guidelines which apply to all BioJulia projects. These guidelines are available here and it is recommended all new contributors read these guidelines before opening a pull request.","category":"page"},{"location":"contributing/#Making-a-contribution-1","page":"Contributing","title":"Making a contribution","text":"","category":"section"},{"location":"contributing/#","page":"Contributing","title":"Contributing","text":"If you're interested in adding functionality to Microbiome.jl, please feel free to open an issue or a pull request (PR) against the master branch. If you're not yet ready for that, you can also ask questions/start a discussion in the Bio.jl gitter channel. ","category":"page"},{"location":"contributing/#","page":"Contributing","title":"Contributing","text":"Work-in-progress PRs are fine, as discussion about approach and code review can happen in the PR.","category":"page"},{"location":"contributing/#","page":"Contributing","title":"Contributing","text":"Before merging, any new code should be unit tested and have docs for newly exported functions, but if you don't know how to do this, don't worry, we can help!","category":"page"}]
}
